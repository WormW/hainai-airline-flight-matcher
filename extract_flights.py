#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
海南航空航班配对器 - 数据提取脚本
🤖 AI Generated by Augment + Claude Sonnet 4

提取航班数据到JSON文件

作者: WormW (with Augment + Claude Sonnet 4)
"""

import re
import json

def extract_flights_data():
    """从HTML文件中提取航班数据"""
    
    # 读取HTML文件
    with open('HNA2666_flight_map_v0807e.html', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 查找航班数据的开始和结束位置
    start_pattern = r'const flights = \['
    end_pattern = r'^\s*\];\s*$'
    
    # 找到开始位置
    start_match = re.search(start_pattern, content, re.MULTILINE)
    if not start_match:
        print("未找到航班数据开始标记")
        return None
    
    start_pos = start_match.end() - 1  # 包含 [
    
    # 从开始位置往后查找结束位置
    lines = content[start_pos:].split('\n')
    flights_lines = []
    bracket_count = 0
    found_start = False
    
    for line in lines:
        if '[' in line and not found_start:
            found_start = True
            bracket_count += line.count('[') - line.count(']')
            flights_lines.append(line)
        elif found_start:
            bracket_count += line.count('[') - line.count(']')
            flights_lines.append(line)
            if bracket_count == 0 and '];' in line:
                break
    
    # 组合航班数据文本
    flights_text = '\n'.join(flights_lines)
    
    # 移除末尾的 ];
    flights_text = re.sub(r'^\s*\];\s*$', ']', flights_text, flags=re.MULTILINE)
    
    try:
        # 解析JSON
        flights_data = json.loads(flights_text)
        print(f"成功提取 {len(flights_data)} 条航班数据")
        
        # 保存到JSON文件
        with open('flights.json', 'w', encoding='utf-8') as f:
            json.dump(flights_data, f, ensure_ascii=False, indent=2)
        
        print("航班数据已保存到 flights.json")
        return flights_data
        
    except json.JSONDecodeError as e:
        print(f"JSON解析错误: {e}")
        # 保存原始文本用于调试
        with open('flights_raw.txt', 'w', encoding='utf-8') as f:
            f.write(flights_text)
        print("原始数据已保存到 flights_raw.txt 用于调试")
        return None

if __name__ == "__main__":
    extract_flights_data()
